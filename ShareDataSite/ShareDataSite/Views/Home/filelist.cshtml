@{
    ViewData["Title"] = "data share demo";
}

@section Script{
    <style>
        .func {
            position: absolute;
            top: 11px;
            right: 17px;
        }

        .base {
            border: 1px dotted #03c;
            padding: 16px;
            margin-bottom: 16px;
            cursor: pointer;
        }

            .base:hover {
                background: #f8f5a9;
            }

        .text {
        }

        .image {
            justify-content: center;
            display: flex;
        }

        img {
            max-width: 100%;
        }



        .filelist ul {
            text-decoration: none;
            margin: 0;
            padding: 0;
        }

            .filelist ul li {
                text-decoration: none;
                padding: 16px;
                border-bottom: thin dotted #808080;
            }

        table td {
            border: 1px solid #999;
            width: 80px;
            height: 40px;
            margin: 10px;
        }

        td.selected {
            background-color: #85be09;
        }
    </style>
}
<div class="page spa-left">
    <div style="padding:16px;background-color:#f3f3f3;">
        <div>
            <span style="font-size:16px;">DATA SHARE DEMO</span>
        </div>
    </div>
    <div class="filelist" style="margin-top:16px;" id="filelist">
        <ul>
            @*<li v-for="f in fileList">
                    <div>
                        <span>{{f.Name}}</span>
                    </div>
                    <div><a href="javascript:void(0)" v-on:click="generateRaw(f.DownloadPath,f.Id)">Get Raw data</a></div>
                    <div style="margin-top:16px;max-width:100%;padding-right:100px;text-overflow: ellipsis;overflow-x:hidden;">
                        <span style="display:block;font-size:0.8em;color:#808080">{{f.Path}}</span>
                    </div>
                    <div>
                        <span style="display:block;font-size:0.8em;color:#808080">{{transDateTime(f.CreatedDateTime)}}</span>
                    </div>
                </li>*@
            <li class="ms-ListItem ms-ListItem--image" v-for="f in fileList" v-on:click="generateRaw(f.DownloadPath,f.Id)">
                <div class="ms-ListItem-image" style="background:none;width:60px;height:60px;">
                    <img v-if="f.Name.endsWith('.doc')||f.Name.endsWith('.docx')" src="~/Content/image/word_32x2.png" alt="Word logo">
                    <img v-if="f.Name.endsWith('.xls')||f.Name.endsWith('.xlsx')" src="~/Content/image/excel_32x2.png" alt="Excel logo">
                    <img v-if="f.Name.endsWith('.ppt')||f.Name.endsWith('.pptx')" src="~/Content/image/powerpoint_32x2.png" alt="PowerPoint logo">
                </div>
                <span class="ms-ListItem-primaryText">{{f.Name}}</span>
                <span class="ms-ListItem-secondaryText">{{transDateTime(f.CreatedDateTime)}}</span>
                <span class="ms-ListItem-tertiaryText">{{f.Path}}</span>
                <div class="ms-ListItem-selectionTarget"></div>
            </li>
        </ul>
    </div>
</div>
<div id="dialogcontainer" class="page spa-right hidden" style="background: white;overflow-y:auto;">
    <div class="content" style="position:absolute;top:40px;left:0;right:0;bottom:0;overflow-y:auto;">

    </div>
    <div id="mesh" class="mesh" style="width:100%;height:100%;position:absolute;top:0;left:0;background:rgba(147, 147, 147, 0.71);">
        <div style="margin:200px auto;width:120px;">
            <div class="ms-Spinner ms-Spinner--large">
                <div class="ms-Spinner-label">
                    Loading...
                </div>
            </div>
        </div>
    </div>
</div>
<script id="checkButton" type="text/html">
    <a class="ms-Link" href="javascript:closedialog()" title="More info about Example Link">BackToList</a>
    <br />
    <button class="ms-Button ms-Button--primary" data-type="text">
        <span class="ms-Button-label">Text</span>
    </button>
    <button class="ms-Button ms-Button--primary" data-type="image">
        <span class="ms-Button-label">Image</span>
    </button>
    <button class="ms-Button ms-Button--primary" data-type="table">
        <span class="ms-Button-label">Table</span>
    </button>
    <script>
        var ButtonElements = document.querySelectorAll(".ms-Button");
        for (var i = 0; i < ButtonElements.length; i++) {
            new fabric['Button'](ButtonElements[i], function () {
                // Insert Event Here
                if ($(this).hasClass("ms-Button--primary")) {
                    $(this).removeClass("ms-Button--primary")
                    $($(this).data("type"), "#dialogcontainer").hide();
                } else {
                    $(this).addClass("ms-Button--primary")
                    $($(this).data("type"), "#dialogcontainer").show();
                }
            });
        }
    </script>
</script>
<script>
    var isMouseDown = false;
    var startRowIndex = null;
    var startCellIndex = null;

    var closedialog = function () {
        $("#dialogcontainer").removeClass("slideIn");
        $("#dialogcontainer").addClass("slideOut");
    }
    var showdialog = function () {
        $("#dialogcontainer").addClass("slideIn");
        $("#dialogcontainer").removeClass("slideOut").removeClass("hidden");
        var content = $(".content", "#dialogcontainer");
        content.html();
        $("#mesh").show();
        return {
            load: function (html) {
                $("#mesh").hide();
                content.append($("#checkButton").html());
                content.append(html);
            }
        }
    }

    var selectTo = function (table, cell) {

        var row = cell.parent();
        var cellIndex = cell.index();
        var rowIndex = row.index();
        var rowStart, rowEnd, cellStart, cellEnd;

        if (rowIndex < startRowIndex) {
            rowStart = rowIndex;
            rowEnd = startRowIndex;
        } else {
            rowStart = startRowIndex;
            rowEnd = rowIndex;
        }

        if (cellIndex < startCellIndex) {
            cellStart = cellIndex;
            cellEnd = startCellIndex;
        } else {
            cellStart = startCellIndex;
            cellEnd = cellIndex;
        }
        for (var i = rowStart; i <= rowEnd; i++) {
            var rowCells = table.find("tr").eq(i).find("td");
            for (var j = cellStart; j <= cellEnd; j++) {
                rowCells.eq(j).addClass("selected");
            }
        }
    }

    var fileListVM = new Vue({
        el: "#filelist",
        data: {
            fileList: [],
            queryUrl: '',
        },
        methods: {
            getOneDriveFileList: function () {
                var self = this;
                var prefixUrl = "https://graph.microsoft.com/v1.0/me/drive/root";
                GetFiles(prefixUrl).then(function (data) {
                    self.fileList = data;
                });
            },
            generateRaw: function (path, id) {
                var _dia = showdialog();
                console.log("file path: " + path);
                var data = {};
                data.accessToken = sessionStorage.token;
                data.fileId = id;
                $.ajax({
                    url: "/api/getrawdata?downloadUri={0}".format(path),
                    method: "post",
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "text",
                    success: function (data) {
                        _dia.load(data);
                        //Get table selected area content
                        var alltable = $(".table");
                        alltable.find("td").mousedown(function (e) {
                            var table = $(this).parent().parent().parent();
                            isMouseDown = true;
                            table.prev().css("display", "block");
                            var cell = $(this);
                            table.find(".selected").removeClass("selected"); // deselect everything
                            if (e.shiftKey) {
                                selectTo(table, cell);
                            } else {
                                cell.addClass("selected");
                                startCellIndex = cell.index();
                                startRowIndex = cell.parent().index();
                            }

                            //insert table buttion click event
                            table.prev().click(function (e) {
                                var tableRegion = new Array();
                                table.find("tr").each(function () {
                                    var rowArray = new Array();
                                    var rowFlag = false;
                                    $(this).find("td").each(function () {
                                        if ($(this).hasClass("selected")) {
                                            rowArray.push($(this).text());
                                            rowFlag = true;
                                        }
                                    });
                                    if (rowFlag) {
                                        tableRegion.push(rowArray);
                                    }
                                });
                                console.log(tableRegion);
                                app.insertTable(tableRegion, null);

                            });

                            return false; // prevent text selection
                        })
                            .mouseover(function () {
                                if (!isMouseDown) return;
                                var table = $(this).parent().parent().parent();
                                table.find(".selected").removeClass("selected");
                                selectTo(table, $(this));
                            })
                            .bind("selectstart", function () {
                                return false;
                            });

                        $(".dialog").find("button.btn").click(function (e) {
                            var table = $(this).next("table");
                            var thead = table.find("thead th").map(function () {
                                return $(this).text();
                            })
                            var tbody = table.find("tbody tr").map(function () {
                                return $(this).find("td").map(function () {
                                    return $(this).text();
                                });
                            })
                            thead = [].slice.call(thead);
                            tbody = [].slice.call(tbody);
                            tbody = [].map.call(tbody, function (item) {
                                return [].slice.call(item);
                            });
                            app.insertTable(tbody, thead);
                        });
                        $(".dialog").find(".base.text").click(function () {
                            app.insertText($(this).text());
                        });
                        $(".dialog").find(".base.image").click(function () {
                            var base64 = $(this).find("img").attr("src").substring($(this).find("img").attr("src").indexOf(",") + 1);
                            app.insertImage(base64);
                        });
                    },
                    error: function (error) {
                        closedialog();
                    },
                    complete: function (data) {

                    },
                });
            },
            transDateTime: transDateTime,
        }
    });
    app.ready(function (graph) {
        fileListVM.getOneDriveFileList();
        //spinner initialize
        var SpinnerElements = document.querySelectorAll(".ms-Spinner");
        for (var i = 0; i < SpinnerElements.length; i++) {
            new fabric['Spinner'](SpinnerElements[i]);
        }
    })

    $(document).mouseup(function () {
        isMouseDown = false;
    });

</script>

